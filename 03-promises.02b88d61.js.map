{"mappings":"YAoBA,SAASA,EAAcC,EAAUC,GACjC,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC9BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAwCK,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDG,EAAK,sBAAqCI,OAAfR,EAAS,QAAYQ,OAANP,EAAM,M,GAEnDA,E,IA3BUQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAA+BC,EAAAF,EAAMG,cAAcC,SAA3Cf,EAAuBa,EAAvBb,MAAOgB,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OAErBb,YAAY,WACV,IAAK,IAAIc,EAAI,EAAGA,IAAMD,EAAOE,MAAOD,IAClCpB,EAAcoB,EAAIF,EAAKG,MAAQD,GAC9BE,MAAK,SAAAC,G,OAAQC,QAAQC,IAAIF,E,IACzBG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E,OAE5BzB,EAAMmB,M","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount} = event.currentTarget.elements;\n\n  setTimeout (() => {\n    for (let i = 1; i <= +amount.value; i++) {\n      createPromise(i, (step.value * i))\n      .then(data => console.log(data))\n      .catch(error => console.log(error))\n    }\n  }, +delay.value)\n}\n\nfunction createPromise(position, delay) {\nreturn new Promise ((resolve, reject) => {\nsetTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    reject(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}, delay)\n})\n\n}\n\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","i","value","then","data","console","log","catch","error"],"version":3,"file":"03-promises.02b88d61.js.map"}